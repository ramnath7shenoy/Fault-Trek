# This workflow builds, tests, and pushes the FaultTrek Docker image to Docker Hub.
# The image is pushed only on a successful merge to the 'main' branch.

name: FaultTrek CI/CD

on:
  push:
    branches:
      - main
  pull_request:

# Define environment variables to avoid repetition and hardcoding.
env:
  DOCKERHUB_USERNAME: ramshenoy7
  # The DOCKERHUB_TOKEN must be stored as a secret in your repository settings.

jobs:
  build-and-push: # Renamed job for clarity
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # This step generates metadata for the Docker image, like tags.
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # Construct the image name using the public username from the env block
          images: ${{ env.DOCKERHUB_USERNAME }}/faulttrek

      - name: Log in to Docker Hub
        # This step only runs on a push to the main branch to avoid unnecessary logins.
        if: github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }} # The token remains a secret

      - name: Build and push FaultTrek Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          # Only push the image when the event is a push to the main branch.
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Run Python tests (Placeholder)
        run: |
          echo "TODO: Implement tests that run against the built Docker container."
          # Example: docker run --rm ${{ env.DOCKERHUB_USERNAME }}/faulttrek:${{ steps.meta.outputs.version }} pytest

